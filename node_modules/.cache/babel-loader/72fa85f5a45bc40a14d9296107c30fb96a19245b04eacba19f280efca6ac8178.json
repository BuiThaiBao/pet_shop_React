{"ast":null,"code":"const STORAGE_KEY = 'addresses';\nconst read = () => {\n  try {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    return raw ? JSON.parse(raw) : [];\n  } catch (e) {\n    return [];\n  }\n};\nconst write = addresses => {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(addresses));\n};\nexport const getAddresses = () => read();\nexport const addAddress = address => {\n  const list = read();\n  let updated = list;\n  if (address.isDefault) {\n    updated = list.map(a => ({\n      ...a,\n      isDefault: false\n    }));\n  }\n  write([{\n    id: Date.now(),\n    ...address\n  }, ...updated]);\n};\nexport const removeAddress = id => {\n  const list = read().filter(a => a.id !== id);\n  write(list);\n};\nexport const setDefaultAddress = id => {\n  const list = read().map(a => ({\n    ...a,\n    isDefault: a.id === id\n  }));\n  write(list);\n};\nexport const updateAddress = (id, partial) => {\n  const list = read().map(a => a.id === id ? {\n    ...a,\n    ...partial\n  } : a);\n  write(list);\n};","map":{"version":3,"names":["STORAGE_KEY","read","raw","localStorage","getItem","JSON","parse","e","write","addresses","setItem","stringify","getAddresses","addAddress","address","list","updated","isDefault","map","a","id","Date","now","removeAddress","filter","setDefaultAddress","updateAddress","partial"],"sources":["E:/React/pet_shop_React/src/components/user/addressStorage.js"],"sourcesContent":["const STORAGE_KEY = 'addresses';\r\n\r\nconst read = () => {\r\n\ttry {\r\n\t\tconst raw = localStorage.getItem(STORAGE_KEY);\r\n\t\treturn raw ? JSON.parse(raw) : [];\r\n\t} catch (e) {\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nconst write = (addresses) => {\r\n\tlocalStorage.setItem(STORAGE_KEY, JSON.stringify(addresses));\r\n};\r\n\r\nexport const getAddresses = () => read();\r\n\r\nexport const addAddress = (address) => {\r\n\tconst list = read();\r\n\tlet updated = list;\r\n\tif (address.isDefault) {\r\n\t\tupdated = list.map((a) => ({ ...a, isDefault: false }));\r\n\t}\r\n\twrite([{ id: Date.now(), ...address }, ...updated]);\r\n};\r\n\r\nexport const removeAddress = (id) => {\r\n\tconst list = read().filter((a) => a.id !== id);\r\n\twrite(list);\r\n};\r\n\r\nexport const setDefaultAddress = (id) => {\r\n\tconst list = read().map((a) => ({ ...a, isDefault: a.id === id }));\r\n\twrite(list);\r\n};\r\n\r\nexport const updateAddress = (id, partial) => {\r\n\tconst list = read().map((a) => (a.id === id ? { ...a, ...partial } : a));\r\n\twrite(list);\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,WAAW;AAE/B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAClB,IAAI;IACH,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC;IAC7C,OAAOE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAG,EAAE;EAClC,CAAC,CAAC,OAAOK,CAAC,EAAE;IACX,OAAO,EAAE;EACV;AACD,CAAC;AAED,MAAMC,KAAK,GAAIC,SAAS,IAAK;EAC5BN,YAAY,CAACO,OAAO,CAACV,WAAW,EAAEK,IAAI,CAACM,SAAS,CAACF,SAAS,CAAC,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAMX,IAAI,CAAC,CAAC;AAExC,OAAO,MAAMY,UAAU,GAAIC,OAAO,IAAK;EACtC,MAAMC,IAAI,GAAGd,IAAI,CAAC,CAAC;EACnB,IAAIe,OAAO,GAAGD,IAAI;EAClB,IAAID,OAAO,CAACG,SAAS,EAAE;IACtBD,OAAO,GAAGD,IAAI,CAACG,GAAG,CAAEC,CAAC,KAAM;MAAE,GAAGA,CAAC;MAAEF,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EACxD;EACAT,KAAK,CAAC,CAAC;IAAEY,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IAAE,GAAGR;EAAQ,CAAC,EAAE,GAAGE,OAAO,CAAC,CAAC;AACpD,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIH,EAAE,IAAK;EACpC,MAAML,IAAI,GAAGd,IAAI,CAAC,CAAC,CAACuB,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;EAC9CZ,KAAK,CAACO,IAAI,CAAC;AACZ,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAIL,EAAE,IAAK;EACxC,MAAML,IAAI,GAAGd,IAAI,CAAC,CAAC,CAACiB,GAAG,CAAEC,CAAC,KAAM;IAAE,GAAGA,CAAC;IAAEF,SAAS,EAAEE,CAAC,CAACC,EAAE,KAAKA;EAAG,CAAC,CAAC,CAAC;EAClEZ,KAAK,CAACO,IAAI,CAAC;AACZ,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAACN,EAAE,EAAEO,OAAO,KAAK;EAC7C,MAAMZ,IAAI,GAAGd,IAAI,CAAC,CAAC,CAACiB,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKA,EAAE,GAAG;IAAE,GAAGD,CAAC;IAAE,GAAGQ;EAAQ,CAAC,GAAGR,CAAE,CAAC;EACxEX,KAAK,CAACO,IAAI,CAAC;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}